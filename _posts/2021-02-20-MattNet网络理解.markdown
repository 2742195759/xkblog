---
layout : post
title  : MattNet 网络理解
date   : 2021-02-20 5:33:00 +0000
category : DL
---

##### 文章地址： From Mendeley

##### 当前难点：

1. 需要高阶和低阶语义信息： 如何在ProposalNet 网络中添加C3和C4两个阶段的特征？？修改ProposalNet网络吗？
2. 需要找到FasterRCNN中同类物体的所有信息： 如何在ProposalNet中找到对应物体的框？？需要提前熟悉一下FasterRCNN
3. **<font color='red'>Attribute Predict 模块:</font> 看他的实现，好像可以直接加入这个模块。（这个模块可以作为图卷积模块的创新点）**
4. **<font color='red'>引入Transformer: </font> 原来的论文使用的是普通的Attention网络和LSTM。尝试引入Transformer作为创新点**

##### 当前研究点：

1. 数据集中加入 Attribute Predict 模块支持。
2. SCRC 中加入 Attribute Predict 模块 -- 查看这个模块是否可以改善原来的 SCRC 模型，消融分析。得到结果如果效果好，加入到 GraphRefer 模型中。

##### <font color='green'> 对Attribute Predict的研究：</font>

``` 
# 下面是对 parse.json 文件的[0]的输出 len() == 100
{
  'tokens': ['the', 'lady', 'with', 'the', 'blue', 'shirt'], 
 	'raw': 'THE LADY WITH THE BLUE SHIRT',  
  'sent_id': 0, 
  'sent': 'the lady with the blue shirt',
  'parse': {'parsetree': '(ROOT (NP (NP (DT the) (NN lady)) (PP (IN with) (NP (DT the) (JJ blue) (NN shirt)))))', 'text': 'the lady with the blue shirt', 'dependencies': [['root', 'ROOT', 'lady'], ['det', 'lady', 'the'], ['det', 'shirt', 'the'], ['amod', 'shirt', 'blue'], ['prep_with', 'lady', 'shirt']], 'indexeddependencies': [['root', 'ROOT-0', 'lady-2'], ['det', 'lady-2', 'the-1'], ['det', 'shirt-6', 'the-4'], ['amod', 'shirt-6', 'blue-5'], ['prep_with', 'lady-2', 'shirt-6']], 'words': [['the', {'NamedEntityTag': 'O', 'CharacterOffsetEnd': '3', 'Lemma': 'the', 'PartOfSpeech': 'DT', 'CharacterOffsetBegin': '0'}], ['lady', {'NamedEntityTag': 'O', 'CharacterOffsetEnd': '8', 'Lemma': 'lady', 'PartOfSpeech': 'NN', 'CharacterOffsetBegin': '4'}], ['with', {'NamedEntityTag': 'O', 'CharacterOffsetEnd': '13', 'Lemma': 'with', 'PartOfSpeech': 'IN', 'CharacterOffsetBegin': '9'}], ['the', {'NamedEntityTag': 'O', 'CharacterOffsetEnd': '17', 'Lemma': 'the', 'PartOfSpeech': 'DT', 'CharacterOffsetBegin': '14'}], ['blue', {'NamedEntityTag': 'O', 'CharacterOffsetEnd': '22', 'Lemma': 'blue', 'PartOfSpeech': 'JJ', 'CharacterOffsetBegin': '18'}], ['shirt', {'NamedEntityTag': 'O', 'CharacterOffsetEnd': '28', 'Lemma': 'shirt', 'PartOfSpeech': 'NN', 'CharacterOffsetBegin': '23'}]]}
}
```

```
# 下面是对 refer-parser2/cache/parsed_atts/refcoco_unc/sents.json 文件
# 的json[0]['atts'] 的输出. len(json) == 142210
{
	'r4': ['none'], 
	'r5': ['prep_with'], 
	'r6': ['shirt'], 
	'r7': ['none'], 
	'r1': ['lady'], 
	'r2': ['none'], 
	'r3': ['none'], 
	'r8': ['blue']
}
```

可以看到，.parse.word = [[...],[...]]很重要，然后JJ DT NN IN等是语法词汇，可以见链接： [PartOfSpeech](https://blog.csdn.net/LYJXCZ/article/details/17082341)  其中有各种名词表示的含义。例如JJ表示名词形容词，这个可以作为 attribute 的关键。

其次，在refer-parser 中应用了一个template parser的工具，见论文中引用[13]。这个工具的接受parse.json中的格式，输出sents.json格式，然后其中的不同的r1 - r8 的关系是如下：我们可以直接使用atts 中的信息的某一些作为 attribute tag。同时插入到我们xkcv2的 referit.dataset 中。下面是r1 - r8 原文的解释

> ##### from refer-parser
>
>Specifically, r1 = entry-level name, r2 = color, r3 = size, r4 = abs. location,
>r5 = rel. location, r6 = rel. object, r7 = generic, r8 = the left words

**在 MattNet文章中提到，我们使用 color and generic attribute with low-frequency words removed 来作为 attribute 。其实也就是 r1 和 r2 作为attribute关键词，然后过滤低频名词。注意加上Balanced Strategy。<font color='orange'>其实作为尝试，我们可以直接过滤 JJ 和 NN 来作为关键词，因为 r2 中感觉很多颜色名词都没有被搜集（虽然可能是名词不直接形容主体）</font>**

###### 具体实现







